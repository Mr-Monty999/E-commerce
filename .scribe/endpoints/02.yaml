name: users
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/users/login
    metadata:
      title: 'Authunticate user and get the token'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: ''
        required: true
        example: qui
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: et
        type: string
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 1,
          "name": null,
          "email": "owner@owner.com",
          "email_verified_at": null,
          "created_at": "2022-11-15T16:59:52.000000Z",
          "updated_at": "2022-11-15T16:59:52.000000Z",
          "deleted_at": null,
          "token": "8|v7THbrUQdHC8N1dokpy3lfPBXPSDjPymtrxwWz8v"
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users/register
    metadata:
      title: 'Register new user (used by guests)'
      description: ''
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: viola.stoltenberg@example.org
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: adipisci
        type: string
        custom: []
      password_confirm:
        name: password_confirm
        description: 'The value and <code>password</code> must match.'
        required: true
        example: deleniti
        type: string
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        custom: []
      roles:
        name: roles
        description: ''
        required: false
        example: null
        type: string
        custom: []
    responses:
      -
        status: 201
        content: |-
          {
          "email": "monty@gmail.comf",
          "name": "ff",
          "updated_at": "2022-11-15T17:40:36.000000Z",
          "created_at": "2022-11-15T17:40:36.000000Z",
          "id": 3,
          "token": "7|DgCOUIw3NCTVPmhwqmwovG6imJHgtGx9nTHrkIle"
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: api/users
    metadata:
      title: 'Display all the users (paginated) with their roles and permissions.'
      description: 'required (view-users) permission'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "current_page": 1,
          "data": [
          {
          "id": 1,
          "name": null,
          "email": "owner@owner.com",
          "email_verified_at": null,
          "created_at": "2022-11-15T18:24:27.000000Z",
          "updated_at": "2022-11-15T19:03:37.000000Z",
          "deleted_at": null,
          "roles": [
          {
          "id": 1,
          "name": "owner",
          "guard_name": "web",
          "created_at": "2022-11-15T18:24:27.000000Z",
          "updated_at": "2022-11-15T18:24:27.000000Z",
          "pivot": {
          "model_id": 1,
          "role_id": 1,
          "model_type": "App\\Models\\User"
          },
          "permissions": []
          }
          ]
          },
          {
          "id": 3,
          "name": null,
          "email": "m@gmail.com",
          "email_verified_at": null,
          "created_at": "2022-11-15T18:51:12.000000Z",
          "updated_at": "2022-11-15T20:36:01.000000Z",
          "deleted_at": null,
          "roles": [
          {
          "id": 2,
          "name": "admin",
          "guard_name": "web",
          "created_at": "2022-11-15T19:34:18.000000Z",
          "updated_at": "2022-11-15T19:34:18.000000Z",
          "pivot": {
          "model_id": 3,
          "role_id": 2,
          "model_type": "App\\Models\\User"
          },
          "permissions": [
          {
          "id": 3,
          "name": "edit-users",
          "guard_name": "web",
          "created_at": "2022-11-15T18:24:27.000000Z",
          "updated_at": "2022-11-15T18:24:27.000000Z",
          "pivot": {
          "role_id": 2,
          "permission_id": 3
          }
          }
          ]
          }
          ]
          },
          {
          "id": 4,
          "name": "ee",
          "email": "m@egmail.com",
          "email_verified_at": null,
          "created_at": "2022-11-15T18:51:36.000000Z",
          "updated_at": "2022-11-15T18:51:36.000000Z",
          "deleted_at": null,
          "roles": []
          }
          ],
          "first_page_url": "http://localhost:8000/api/users?page=1",
          "from": 1,
          "last_page": 1,
          "last_page_url": "http://localhost:8000/api/users?page=1",
          "links": [
          {
          "url": null,
          "label": "&laquo; Previous",
          "active": false
          },
          {
          "url": "http://localhost:8000/api/users?page=1",
          "label": "1",
          "active": true
          },
          {
          "url": null,
          "label": "Next &raquo;",
          "active": false
          }
          ],
          "next_page_url": null,
          "path": "http://localhost:8000/api/users",
          "per_page": 5,
          "prev_page_url": null,
          "to": 3,
          "total": 3
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - POST
    uri: api/users
    metadata:
      title: 'Store a newly created user.'
      description: 'required (create-users) permission'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: frederick95@example.net
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: ullam
        type: string
        custom: []
      password_confirm:
        name: password_confirm
        description: 'The value and <code>password</code> must match.'
        required: true
        example: voluptatem
        type: string
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        custom: []
      roles:
        name: roles
        description: 'int[] can be array of roles names or ids'
        required: false
        example:
          - temporibus
        type: 'string[]'
        custom: []
    responses:
      -
        status: 201
        content: |-
          {
          "email": "khalid@egmail.com",
          "name": "g",
          "updated_at": "2022-11-15T20:41:00.000000Z",
          "created_at": "2022-11-15T20:41:00.000000Z",
          "id": 6,
          "roles": [
          {
          "id": 2,
          "name": "admin",
          "guard_name": "web",
          "created_at": "2022-11-15T19:34:18.000000Z",
          "updated_at": "2022-11-15T19:34:18.000000Z",
          "pivot": {
          "model_id": 6,
          "role_id": 2,
          "model_type": "App\\Models\\User"
          },
          "permissions": [
          {
          "id": 3,
          "name": "edit-users",
          "guard_name": "web",
          "created_at": "2022-11-15T18:24:27.000000Z",
          "updated_at": "2022-11-15T18:24:27.000000Z",
          "pivot": {
          "role_id": 2,
          "permission_id": 3
          }
          }
          ]
          }
          ]
          }
        headers: []
        description: '201'
    responseFields: []
  -
    httpMethods:
      - GET
    uri: 'api/users/{id}'
    metadata:
      title: 'Display the specified user with it roles and permissions.'
      description: 'required (view-users) permission'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 3,
          "name": null,
          "email": "m@gmail.com",
          "email_verified_at": null,
          "created_at": "2022-11-15T18:51:12.000000Z",
          "updated_at": "2022-11-15T20:36:01.000000Z",
          "deleted_at": null,
          "roles": [
          {
          "id": 2,
          "name": "admin",
          "guard_name": "web",
          "created_at": "2022-11-15T19:34:18.000000Z",
          "updated_at": "2022-11-15T19:34:18.000000Z",
          "pivot": {
          "model_id": 3,
          "role_id": 2,
          "model_type": "App\\Models\\User"
          },
          "permissions": [
          {
          "id": 3,
          "name": "edit-users",
          "guard_name": "web",
          "created_at": "2022-11-15T18:24:27.000000Z",
          "updated_at": "2022-11-15T18:24:27.000000Z",
          "pivot": {
          "role_id": 2,
          "permission_id": 3
          }
          }
          ]
          }
          ]
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/users/{id}'
    metadata:
      title: 'Update the specified user.'
      description: 'required (edit-users) permission'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters:
      email:
        name: email
        description: 'Must be a valid email address.'
        required: true
        example: earnest94@example.net
        type: string
        custom: []
      password:
        name: password
        description: ''
        required: true
        example: praesentium
        type: string
        custom: []
      password_confirm:
        name: password_confirm
        description: 'The value and <code>password</code> must match.'
        required: true
        example: vel
        type: string
        custom: []
      name:
        name: name
        description: ''
        required: false
        example: null
        type: string
        custom: []
      roles:
        name: roles
        description: 'int[] can be array of roles names or ids'
        required: false
        example:
          - quibusdam
        type: 'string[]'
        custom: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 3,
          "name": null,
          "email": "m@gmail.com",
          "email_verified_at": null,
          "created_at": "2022-11-15T18:51:12.000000Z",
          "updated_at": "2022-11-15T20:36:01.000000Z",
          "deleted_at": null,
          "roles": [
          {
          "id": 2,
          "name": "admin",
          "guard_name": "web",
          "created_at": "2022-11-15T19:34:18.000000Z",
          "updated_at": "2022-11-15T19:34:18.000000Z",
          "pivot": {
          "model_id": 3,
          "role_id": 2,
          "model_type": "App\\Models\\User"
          },
          "permissions": [
          {
          "id": 3,
          "name": "edit-users",
          "guard_name": "web",
          "created_at": "2022-11-15T18:24:27.000000Z",
          "updated_at": "2022-11-15T18:24:27.000000Z",
          "pivot": {
          "role_id": 2,
          "permission_id": 3
          }
          }
          ]
          }
          ]
          }
        headers: []
        description: '200'
    responseFields: []
  -
    httpMethods:
      - DELETE
    uri: 'api/users/{id}'
    metadata:
      title: 'Remove the specified user.'
      description: 'required (delete-users) permission'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the user.'
        required: true
        example: 1
        type: integer
        custom: []
    queryParameters: []
    bodyParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "id": 1,
          "name": null,
          "email": "owner@owner.com",
          "email_verified_at": null,
          "created_at": "2022-11-15T18:24:27.000000Z",
          "updated_at": "2022-11-15T19:03:37.000000Z",
          "deleted_at": null
          }
        headers: []
        description: '200'
    responseFields: []
